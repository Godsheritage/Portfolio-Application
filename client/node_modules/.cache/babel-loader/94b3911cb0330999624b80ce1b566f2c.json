{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_Subscription,_symbol_iterator PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nexport function scheduleIterable(input, scheduler) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n\n  return new Observable(function (subscriber) {\n    var sub = new Subscription();\n    var iterator;\n    sub.add(function () {\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(function () {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n\n        var value;\n        var done;\n\n        try {\n          var result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}","map":{"version":3,"mappings":"AAAA;AAEA,SAASA,UAAT,QAAuB,eAAvB;AACA,SAASC,YAAT,QAAqB,iBAArB;AAEA,SAAMC,QAAU,mBAAhB,QAAwD,oBAAxD;OACE,SAAYC,gBAAZ,CAAYC,KAAZ,EAAYC,SAAZ,EAAY;MACV,QAAM;AACP;AACD;;SACE,IAASL,UAAT,CAAgB,UAAcM,UAAd,EAAe;AAC/B,QAAIC,UAAsBN,YAAtB,EAAJ;AACA,QAAIC,QAAJ;QAEEM,IAAI,YAAY;UACdN,QAAQ,IAAC,OAASA,eAAT,KAAS;AACnBA;AACA;AACH;QACEM,aAAW,SAAX,CAAiB,YAAkB;AACnCN,cAAQ,SAASO,eAAT,GAAR;UACED,IAAIH,UAAUK,QAAV,CAAmB;YACrBJ,UAAO;AACR;AACD;;AACA,YAAIK,KAAJ;AACA,YAAIC,IAAJ;;YACE;AACA,oBAAQ,WAAa,KAAb,EAAR;AACAD,eAAI,GAAGE,MAAO,MAAd;AACDD;AAAC,iBACAE;AACAR,oBAAO,MAAP,CAAOQ,GAAP;AACD;AACD;;YACEF;AACDN;eACC;AACAA,oBAAK,KAAL,CAAgBK,KAAhB;AACD;AACC;AACF,OApBI;AAqBR,KAvBE;AAwBD;AACJ,GAlCG","names":["Observable","Subscription","iterator","scheduleIterable","input","scheduler","subscriber","sub","add","Symbol_iterator","schedule","value","done","result","err"],"sources":["../../../src/internal/scheduled/scheduleIterable.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}