{"ast":null,"code":"/** PURE_IMPORTS_START _Observable,_util_isArray,_util_isFunction,_operators_map PURE_IMPORTS_END */\nimport { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { map } from '../operators/map';\n\nvar toString = /*@__PURE__*/function () {\n  return Object.prototype.toString;\n}();\n\nexport function fromEvent(target, eventName, options, resultSelector) {\n  if (isFunction(options)) {\n    resultSelector = options;\n    options = undefined;\n  }\n\n  if (resultSelector) {\n    return fromEvent(target, eventName, options).pipe(map(function (args) {\n      return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args);\n    }));\n  }\n\n  return new Observable(function (subscriber) {\n    function handler(e) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n\n    setupSubscription(target, eventName, handler, subscriber, options);\n  });\n}\n\nfunction setupSubscription(sourceObj, eventName, handler, subscriber, options) {\n  var unsubscribe;\n\n  if (isEventTarget(sourceObj)) {\n    var source_1 = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n\n    unsubscribe = function unsubscribe() {\n      return source_1.removeEventListener(eventName, handler, options);\n    };\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    var source_2 = sourceObj;\n    sourceObj.on(eventName, handler);\n\n    unsubscribe = function unsubscribe() {\n      return source_2.off(eventName, handler);\n    };\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    var source_3 = sourceObj;\n    sourceObj.addListener(eventName, handler);\n\n    unsubscribe = function unsubscribe() {\n      return source_3.removeListener(eventName, handler);\n    };\n  } else if (sourceObj && sourceObj.length) {\n    for (var i = 0, len = sourceObj.length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj) {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj) {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}","map":{"version":3,"mappings":"AAAA;AACA,SAASA,UAAT,QAAwB,eAAxB;AACA,SAASC,OAAT,QAAqB,iBAArB;AAEA,SAASC,UAAT,QAAoB,oBAApB;AAEA,SAAMC,GAAN,QAA4B,kBAA5B;;AA0KA,YAAM,gBACJ,YACA;AAAiB,SACjBC,MACA,UADA,CACwCC,QAFvB;AAEuB,CAHxC,EADF;;OAOE,SAAIC,SAAJ,CAAsBC,MAAtB,EAAyBC,SAAzB,EAAyBC,OAAzB,EAAyBC,cAAzB,EAAyB;MAEvBR,qBAAiB;AACjBQ,kBAAU,UAAV;AACDD;AACD;;MAEEC,gBAAgB;AAGjB;AAAA;AAAA;AAED;;SACE,eAAqB;aACfC,QAASC,GAAC;UACZC,UAAUC,MAAV,GAAgB,GAAM;AACvBC;aACC;AACDA;AACF;AACD;;AACCC;AACJ,GATG;AAWJ;;SAGMA,kBAAwBC;AAC5B,MAAIC,WAAJ;;MACEC,aAAY,aAAa;AACzB,gBAAU,YAAV;AACAF,+BAAcT,SAAd,EAAoBG,OAApB,EAA2BF,OAA3B;;AACDS;AAAA;AAAA;SACC,IAAME,yBAAmB,WAAzB,EAAyB;AACzB,gBAAY,GAACH,SAAb;AACAA,iBAAWT,SAAX,EAAcG,OAAd;;AACDO;AAAA;AAAA;GAHC,MAIA,IAAMG,uBAAmB,WAAzB,EAAyB;AACzB,gBAAU,YAAV;AACAJ,0BAAcT,SAAd,EAAoBG,OAApB;;AACDO;AAAA;AAAA;GAHC,MAIA,IAAKD,SAAS,IAAEA,SAAO,OAAvB,EAAyC;SACvC,iBAAkBA,SAAS,CAACH,QAAIQ,SAAWA,KAAO;AACnDN;AACF;GAHC,MAIA;AACD;AAED;;AACDD;AAED;;SACEM,wBAA2BJ,WAAU;AACtC;AAED;;SACEG,0BAA2BH,WAAY;AACxC;AAED;;SACEE,cAAgBF,WAAW;AAC5B","names":["Observable","isArray","isFunction","map","Object","toString","fromEvent","target","eventName","options","resultSelector","handler","e","arguments","length","subscriber","setupSubscription","sourceObj","unsubscribe","isEventTarget","isJQueryStyleEventEmitter","isNodeStyleEventEmitter","i"],"sources":["../../../src/internal/observable/fromEvent.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}