{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_fromArray,_util_isArray,_Subscriber,_.._internal_symbol_iterator,_innerSubscribe PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip() {\n  var observables = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    observables[_i] = arguments[_i];\n  }\n\n  var resultSelector = observables[observables.length - 1];\n\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nvar ZipOperator = /*@__PURE__*/function () {\n  function ZipOperator(resultSelector) {\n    this.resultSelector = resultSelector;\n  }\n\n  ZipOperator.prototype.call = function (subscriber, source) {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  };\n\n  return ZipOperator;\n}();\n\nexport { ZipOperator };\n\nvar ZipSubscriber = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ZipSubscriber, _super);\n\n  function ZipSubscriber(destination, resultSelector, values) {\n    if (values === void 0) {\n      values = Object.create(null);\n    }\n\n    var _this = _super.call(this, destination) || this;\n\n    _this.resultSelector = resultSelector;\n    _this.iterators = [];\n    _this.active = 0;\n    _this.resultSelector = typeof resultSelector === 'function' ? resultSelector : undefined;\n    return _this;\n  }\n\n  ZipSubscriber.prototype._next = function (value) {\n    var iterators = this.iterators;\n\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  };\n\n  ZipSubscriber.prototype._complete = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete();\n      return;\n    }\n\n    this.active = len;\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n\n      if (iterator.stillUnsubscribed) {\n        var destination = this.destination;\n        destination.add(iterator.subscribe());\n      } else {\n        this.active--;\n      }\n    }\n  };\n\n  ZipSubscriber.prototype.notifyInactive = function () {\n    this.active--;\n\n    if (this.active === 0) {\n      this.destination.complete();\n    }\n  };\n\n  ZipSubscriber.prototype.checkIterators = function () {\n    var iterators = this.iterators;\n    var len = iterators.length;\n    var destination = this.destination;\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    var shouldComplete = false;\n    var args = [];\n\n    for (var i = 0; i < len; i++) {\n      var iterator = iterators[i];\n      var result = iterator.next();\n\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete();\n    }\n  };\n\n  ZipSubscriber.prototype._tryresultSelector = function (args) {\n    var result;\n\n    try {\n      result = this.resultSelector.apply(this, args);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    this.destination.next(result);\n  };\n\n  return ZipSubscriber;\n}(Subscriber);\n\nexport { ZipSubscriber };\n\nvar StaticIterator = /*@__PURE__*/function () {\n  function StaticIterator(iterator) {\n    this.iterator = iterator;\n    this.nextResult = iterator.next();\n  }\n\n  StaticIterator.prototype.hasValue = function () {\n    return true;\n  };\n\n  StaticIterator.prototype.next = function () {\n    var result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  };\n\n  StaticIterator.prototype.hasCompleted = function () {\n    var nextResult = this.nextResult;\n    return Boolean(nextResult && nextResult.done);\n  };\n\n  return StaticIterator;\n}();\n\nvar StaticArrayIterator = /*@__PURE__*/function () {\n  function StaticArrayIterator(array) {\n    this.array = array;\n    this.index = 0;\n    this.length = 0;\n    this.length = array.length;\n  }\n\n  StaticArrayIterator.prototype[Symbol_iterator] = function () {\n    return this;\n  };\n\n  StaticArrayIterator.prototype.next = function (value) {\n    var i = this.index++;\n    var array = this.array;\n    return i < this.length ? {\n      value: array[i],\n      done: false\n    } : {\n      value: null,\n      done: true\n    };\n  };\n\n  StaticArrayIterator.prototype.hasValue = function () {\n    return this.array.length > this.index;\n  };\n\n  StaticArrayIterator.prototype.hasCompleted = function () {\n    return this.array.length === this.index;\n  };\n\n  return StaticArrayIterator;\n}();\n\nvar ZipBufferIterator = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(ZipBufferIterator, _super);\n\n  function ZipBufferIterator(destination, parent, observable) {\n    var _this = _super.call(this, destination) || this;\n\n    _this.parent = parent;\n    _this.observable = observable;\n    _this.stillUnsubscribed = true;\n    _this.buffer = [];\n    _this.isComplete = false;\n    return _this;\n  }\n\n  ZipBufferIterator.prototype[Symbol_iterator] = function () {\n    return this;\n  };\n\n  ZipBufferIterator.prototype.next = function () {\n    var buffer = this.buffer;\n\n    if (buffer.length === 0 && this.isComplete) {\n      return {\n        value: null,\n        done: true\n      };\n    } else {\n      return {\n        value: buffer.shift(),\n        done: false\n      };\n    }\n  };\n\n  ZipBufferIterator.prototype.hasValue = function () {\n    return this.buffer.length > 0;\n  };\n\n  ZipBufferIterator.prototype.hasCompleted = function () {\n    return this.buffer.length === 0 && this.isComplete;\n  };\n\n  ZipBufferIterator.prototype.notifyComplete = function () {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete();\n    }\n  };\n\n  ZipBufferIterator.prototype.notifyNext = function (innerValue) {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  };\n\n  ZipBufferIterator.prototype.subscribe = function () {\n    return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n  };\n\n  return ZipBufferIterator;\n}(SimpleOuterSubscriber);","map":{"version":3,"mappings":"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","names":["tslib_1","fromArray","isArray","Subscriber","iterator","SimpleOuterSubscriber","SimpleInnerSubscriber","innerSubscribe","_i","resultSelector","observables","ZipOperator","call","subscriber","source","ZipSubscriber","_super","values","create","destination","_this","undefined","_next","iterators","push","StaticArrayIterator","value","StaticIterator","_complete","len","length","unsubscribe","complete","active","i","notifyInactive","checkIterators","shouldComplete","args","result","next","prototype","_tryresultSelector","apply","err","error","hasCompleted","array","done","index","ZipBufferIterator","parent","observable","buffer","notifyComplete","isComplete","notifyNext","subscribe"],"sources":["../../../src/internal/observable/zip.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}