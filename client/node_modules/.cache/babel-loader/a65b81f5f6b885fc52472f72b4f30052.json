{"ast":null,"code":"/** PURE_IMPORTS_START tslib,_Action PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Action } from './Action';\n\nvar AsyncAction = /*@__PURE__*/function (_super) {\n  tslib_1.__extends(AsyncAction, _super);\n\n  function AsyncAction(scheduler, work) {\n    var _this = _super.call(this, scheduler, work) || this;\n\n    _this.scheduler = scheduler;\n    _this.work = work;\n    _this.pending = false;\n    return _this;\n  }\n\n  AsyncAction.prototype.schedule = function (state, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (this.closed) {\n      return this;\n    }\n\n    this.state = state;\n    var id = this.id;\n    var scheduler = this.scheduler;\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    this.pending = true;\n    this.delay = delay;\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n    return this;\n  };\n\n  AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  };\n\n  AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {\n    if (delay === void 0) {\n      delay = 0;\n    }\n\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n\n    clearInterval(id);\n    return undefined;\n  };\n\n  AsyncAction.prototype.execute = function (state, delay) {\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n\n    var error = this._execute(state, delay);\n\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  };\n\n  AsyncAction.prototype._execute = function (state, delay) {\n    var errored = false;\n    var errorValue = undefined;\n\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  };\n\n  AsyncAction.prototype._unsubscribe = function () {\n    var id = this.id;\n    var scheduler = this.scheduler;\n    var actions = scheduler.actions;\n    var index = actions.indexOf(this);\n    this.work = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  };\n\n  return AsyncAction;\n}(Action);\n\nexport { AsyncAction };","map":{"version":3,"mappings":";AAAA,OAAO,KAAEA,OAAT,MAAuB,OAAvB;AAUA;;IAAoCC,qCAASC,MAAT,EAAS;AAO3CF,iCAA+CE,MAA/C;;WAAAD,YAEEE,iBAAM;AAFc,kCAAyBA,SAAzB,EAAyBC,IAAzB,KAAyB,IAAzB;;AACAC,sBAAmDF,SAAnD;AAHZE,iBAAOD,IAAP;;AAKT;AAEM;;aAAoB,gCAAiBE,KAAjB,EAAiBC,KAAjB,EAAiB;AAE1C,QAAIA,KAAK,UAAQ,CAAjB,EAAiB;AACfA,cAAO,CAAP;AACD;;AAGD,QAAI,KAACC,MAAL,EAAa;AAEP,aAAK,IAAL;AACN;;AAuBA,SAAIF,KAAJ,GAAUA,KAAV;QACEG,KAAK,KAAKA;QACXN;;AAID,QAAIM,EAAC,QAAL,EAAe;AAEX,WAACA,EAAD,GAAS,KAAMC,cAAN,CAAMP,SAAN,EAAMM,EAAN,EAAMF,KAAN,CAAT;AAEJ;;AAEA,mBAAY,IAAZ;AACD;AAES,6CAAVJ,SAAU,EAAe,KAA2BM,EAA1C,EAAoDF,KAApD;AAAoD;;;AAE9DN,aAAC,UAAD,CAACU,cAAD,GAAC;AAES;AAAmDJ;AAE3D;;WACEK,WAAU;GALd;;aASE,WAAkBF;AAClB,aAAO,UAAU,CAAjB,EAAiB;AAClBH;AAMM;;AAEL,QAAIA,KAAK,SAAL,IAAa,oBAAb,IAAa,sBAAjB,EAAiB;AACf,aAAOE,EAAP;AACD;;AAEDI,iBAAY,IAAZ;AACA,WAAMC,SAAN;;;aAEE,WAAaC;QACd;aAAU,IAAKC,KAAL,CAAY,8BAAZ;;;SAeVC;;AACF;;AAES;AACJ,aAAOC,KAAP;AACJ,KAFQ,MAGJ;AACF,WAAKT,EAAL,GAAU,KAAKC,cAAL,CAAO,cAAP,EAAO,OAAP,EAAO,IAAP,CAAV;AACD;;;aACC,WAAcS,WAAC;QACfC,UAAU;QACXC;;AACD,QAAI;AACF,WAAKjB,IAAL,CAAKE,KAAL;KADF,QAGCgB;AACFF;AAGDC;AAEE;;AACA,QAAMD,OAAN,EAAe;AACT;AACA,aAAKC,UAAL;AAEN;;;aAEK,WAAUE,eAAM;AACrB,QAAId,EAAC,QAASA,EAAd;AAEA,QAAIN,SAAK,GAAO,KAAEA,SAAlB;QACEqB,OAAO,GAACrB,SAAO,CAAKqB;QACrBC;AAED,SAAIrB,IAAJ,GAAU,IAAV;SACEE,QAAO;SACRW;AAED,SAAKd,SAAL,GAAiB,IAAjB;;AACD;AACHqB,qBAACC,KAAD,EAAC,CAAD;AAjJ0C;;;;;;;;;;CAAN","names":["tslib_1","AsyncAction","_super","scheduler","work","_this","state","delay","closed","id","recycleAsyncId","requestAsyncId","setInterval","clearInterval","undefined","execute","Error","pending","error","_execute","errored","errorValue","e","_unsubscribe","actions","index"],"sources":["../../../src/internal/scheduler/AsyncAction.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}