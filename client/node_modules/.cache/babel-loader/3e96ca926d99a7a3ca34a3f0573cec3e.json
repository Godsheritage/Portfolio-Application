{"ast":null,"code":"import { isValidElement, createElement, useRef, useEffect, useReducer, cloneElement, useState, Children } from 'react';\nimport { Transition } from 'react-transition-group';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { render } from 'react-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nfunction objectValues(obj) {\n  return Object.keys(obj).map(function (key) {\n    return obj[key];\n  });\n}\n\nfunction hasToastId(toastId) {\n  return toastId === 0 || toastId;\n}\n\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\n\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n/**\r\n * Used to collapse toast after exit animation\r\n */\n\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */\n) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n\n  var height = node.scrollHeight;\n  var style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(function () {\n        return done();\n      }, duration);\n    });\n  });\n}\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n      exit = _ref.exit,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 750 : _ref$duration,\n      _ref$appendPosition = _ref.appendPosition,\n      appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n      _ref$collapse = _ref.collapse,\n      collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n      _ref$collapseDuration = _ref.collapseDuration,\n      collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  var enterDuration, exitDuration;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    enterDuration = duration[0];\n    exitDuration = duration[1];\n  } else {\n    enterDuration = exitDuration = duration;\n  }\n\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n        position = _ref2.position,\n        preventExitTransition = _ref2.preventExitTransition,\n        done = _ref2.done,\n        props = _objectWithoutPropertiesLoose(_ref2, [\"children\", \"position\", \"preventExitTransition\", \"done\"]);\n\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n\n    var onEnter = function onEnter() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = enterDuration + \"ms\";\n      }\n    };\n\n    var onEntered = function onEntered() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.removeProperty('animationFillMode');\n        node.style.removeProperty('animationDuration');\n      }\n    };\n\n    var onExited = function onExited() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      }\n    };\n\n    var onExit = function onExit() {\n      var node = props.nodeRef.current;\n\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = exitDuration + \"ms\";\n        node.addEventListener('animationend', onExited);\n      }\n    };\n\n    return createElement(Transition, Object.assign({}, props, {\n      timeout: preventExitTransition ? collapse ? collapseDuration : 50\n      /* DEBOUNCE_DURATION */\n      : {\n        enter: enterDuration,\n        exit: collapse ? exitDuration + collapseDuration : exitDuration + 50\n        /* DEBOUNCE_DURATION */\n\n      },\n      onEnter: onEnter,\n      onEntered: onEntered,\n      onExit: preventExitTransition ? onExited : onExit,\n      unmountOnExit: true\n    }), children);\n  };\n}\n\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(function (timer) {\n        return clearTimeout(timer);\n      });\n      this.emitQueue[\"delete\"](event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\n/**\r\n * `useKeeper` is a helper around `useRef`.\r\n *\r\n * You don't need to access the `.current`property to get the value\r\n * If refresh is set to true. The ref will be updated every render\r\n */\n\nfunction useKeeper(arg, refresh) {\n  if (refresh === void 0) {\n    refresh = false;\n  }\n\n  var ref = useRef(arg);\n  useEffect(function () {\n    if (refresh) ref.current = arg;\n  });\n  return ref.current;\n}\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [].concat(state, [action.toastId]).filter(function (id) {\n        return id !== action.staleId;\n      });\n\n    case 'REMOVE':\n      return hasToastId(action.toastId) ? state.filter(function (id) {\n        return id !== action.toastId;\n      }) : [];\n  }\n}\n\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useReducer2 = useReducer(reducer, []),\n      toast = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var containerRef = useRef(null);\n  var toastCount = useKeeper(0);\n  var queue = useKeeper([]);\n  var collection = useKeeper({});\n  var instance = useKeeper({\n    toastKey: 1,\n    displayedToast: 0,\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return collection[id] || null;\n    }\n  });\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */\n    ).on(0\n    /* Show */\n    , buildToast).on(1\n    /* Clear */\n    , function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* DidMount */\n    , instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */\n      , instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(4\n    /* Change */\n    , toast.length, props.containerId);\n  }, [toast]);\n  useEffect(function () {\n    instance.props = props;\n  });\n\n  function isToastActive(id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var _instance$props = instance.props,\n        limit = _instance$props.limit,\n        enableMultiContainer = _instance$props.enableMultiContainer;\n\n    if (limit && (!containerId || instance.containerId === containerId && enableMultiContainer)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    var queueLen = queue.length;\n    toastCount = hasToastId(toastId) ? toastCount - 1 : toastCount - instance.displayedToast;\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      var freeSlot = hasToastId(toastId) ? 1 : instance.props.limit;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (var i = 0; i < toDequeue; i++) {\n          dequeueToast();\n        }\n      }\n    }\n\n    dispatch({\n      type: 'REMOVE',\n      toastId: toastId\n    });\n  }\n\n  function dequeueToast() {\n    var _queue$shift = queue.shift(),\n        toastContent = _queue$shift.toastContent,\n        toastProps = _queue$shift.toastProps,\n        staleId = _queue$shift.staleId; // ensure that exit transition has been completed, hence the timeout\n\n\n    setTimeout(function () {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(_ref2) {\n    var containerId = _ref2.containerId,\n        toastId = _ref2.toastId,\n        updateId = _ref2.updateId;\n    return !containerRef.current || instance.props.enableMultiContainer && containerId !== instance.props.containerId || instance.isToastActive(toastId) && updateId == null ? true : false;\n  } // this function and all the function called inside needs to rely on ref(`useKeeper`)\n\n\n  function buildToast(content, _ref3) {\n    var delay = _ref3.delay,\n        staleId = _ref3.staleId,\n        options = _objectWithoutPropertiesLoose(_ref3, [\"delay\", \"staleId\"]);\n\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n        updateId = options.updateId;\n    var props = instance.props,\n        isToastActive = instance.isToastActive;\n\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n\n    var isNotAnUpdate = !isToastActive(toastId);\n    if (isNotAnUpdate) toastCount++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: isNum(options.draggablePercent) ? options.draggablePercent : props.draggablePercent,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast: function deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    var closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n    var toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast,\n        toastProps: toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast,\n        toastProps: toastProps\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n\n    if (props.limit && props.limit > 0 && toastCount > props.limit && isNotAnUpdate) {\n      queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    collection[toastId] = {\n      content: content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId: toastId,\n      staleId: staleId\n    });\n  }\n\n  function removeFromCollection(toastId) {\n    delete collection[toastId];\n    forceUpdate();\n  }\n\n  function getToastToRender(cb) {\n    var toastToRender = {};\n    var toastList = props.newestOnTop ? Object.keys(collection).reverse() : Object.keys(collection);\n\n    for (var i = 0; i < toastList.length; i++) {\n      var _toast = collection[toastList[i]];\n      var position = _toast.props.position;\n      toastToRender[position] || (toastToRender[position] = []);\n      toastToRender[position].push(_toast);\n    }\n\n    return Object.keys(toastToRender).map(function (p) {\n      return cb(p, toastToRender[p]);\n    });\n  }\n\n  return {\n    getToastToRender: getToastToRender,\n    collection: collection,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction useToast(props) {\n  var _useState = useState(true),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var _useState2 = useState(false),\n      preventExitTransition = _useState2[0],\n      setPreventExitTransition = _useState2[1];\n\n  var toastRef = useRef(null);\n  var drag = useKeeper({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  var syncProps = useKeeper(props, true);\n  var autoClose = props.autoClose,\n      pauseOnHover = props.pauseOnHover,\n      closeToast = props.closeToast,\n      onClick = props.onClick,\n      closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      if (isFn(syncProps.onClose)) syncProps.onClose(isValidElement(syncProps.children) && syncProps.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.draggable && bindDragEvents();\n    return function () {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    var toast = toastRef.current;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n          top = _drag$boundingRect.top,\n          bottom = _drag$boundingRect.bottom,\n          left = _drag$boundingRect.left,\n          right = _drag$boundingRect.right;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    e.preventDefault();\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e); // prevent false positif during a toast click\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translateX(\" + drag.deltaX + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.deltaX / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    var toast = toastRef.current;\n\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n      type = _ref.type,\n      _ref$ariaLabel = _ref.ariaLabel,\n      ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button--\" + type,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction ProgressBar(_ref) {\n  var _ref2, _animationEvent;\n\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      userStyle = _ref.style,\n      controlledProgress = _ref.controlledProgress,\n      progress = _ref.progress,\n      rtl = _ref.rtl,\n      isIn = _ref.isIn;\n\n  var style = _extends({}, userStyle, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var defaultClassArr = [\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--\" + type, (_ref2 = {}, _ref2[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--rtl\"] = rtl, _ref2)];\n  var classNames = isFn(className) ? className({\n    rtl: rtl,\n    type: type,\n    defaultClassName: cx.apply(void 0, defaultClassArr)\n  }) : cx.apply(void 0, [].concat(defaultClassArr, [className])); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent);\n  return createElement(\"div\", Object.assign({\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n\nvar Toast = function Toast(props) {\n  var _ref;\n\n  var _useToast = useToast(props),\n      isRunning = _useToast.isRunning,\n      preventExitTransition = _useToast.preventExitTransition,\n      toastRef = _useToast.toastRef,\n      eventHandlers = _useToast.eventHandlers;\n\n  var closeButton = props.closeButton,\n      children = props.children,\n      autoClose = props.autoClose,\n      onClick = props.onClick,\n      type = props.type,\n      hideProgressBar = props.hideProgressBar,\n      closeToast = props.closeToast,\n      Transition = props.transition,\n      position = props.position,\n      className = props.className,\n      style = props.style,\n      bodyClassName = props.bodyClassName,\n      bodyStyle = props.bodyStyle,\n      progressClassName = props.progressClassName,\n      progressStyle = props.progressStyle,\n      updateId = props.updateId,\n      role = props.role,\n      progress = props.progress,\n      rtl = props.rtl,\n      toastId = props.toastId,\n      deleteToast = props.deleteToast;\n  var defaultClassArr = [\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--\" + type, (_ref = {}, _ref[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--rtl\"] = rtl, _ref)];\n  var cssClasses = isFn(className) ? className({\n    rtl: rtl,\n    position: position,\n    type: type,\n    defaultClassName: cx.apply(void 0, defaultClassArr)\n  }) : cx.apply(void 0, [].concat(defaultClassArr, [className]));\n  var controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return;\n    var props = {\n      closeToast: closeToast,\n      type: type\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return createElement(Transition, {\n    \"in\": props[\"in\"],\n    appear: true,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses || undefined\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), createElement(\"div\", Object.assign({}, props[\"in\"] && {\n    role: role\n  }, {\n    className: isFn(bodyClassName) ? bodyClassName({\n      type: type\n    }) : cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), children), renderCloseButton(closeButton), (autoClose || controlledProgress) && createElement(ProgressBar, Object.assign({}, updateId && !controlledProgress ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: props[\"in\"],\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: controlledProgress,\n    progress: progress\n  }))));\n};\n\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-exit\",\n  duration: [450, 750],\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-exit\"\n});\n\nvar ToastPositioner = function ToastPositioner(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      style = _ref.style,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"children\", \"className\", \"style\"]); // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n\n\n  delete rest[\"in\"];\n  return createElement(\"div\", {\n    className: className,\n    style: style\n  }, Children.map(children, function (child) {\n    return cloneElement(child, rest);\n  }));\n};\n\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n      getToastToRender = _useToastContainer.getToastToRender,\n      containerRef = _useToastContainer.containerRef,\n      isToastActive = _useToastContainer.isToastActive;\n\n  var className = props.className,\n      style = props.style,\n      rtl = props.rtl,\n      containerId = props.containerId;\n  return createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    ,\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var _cx, _cx2;\n\n    var swag = {\n      className: isFn(className) ? className({\n        position: position,\n        rtl: rtl,\n        defaultClassName: cx(\"Toastify\"\n        /* CSS_NAMESPACE */\n        + \"__toast-container\", \"Toastify\"\n        /* CSS_NAMESPACE */\n        + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n        /* CSS_NAMESPACE */\n        + \"__toast-container--rtl\"] = rtl, _cx))\n      }) : cx(\"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container\", \"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container--\" + position, (_cx2 = {}, _cx2[\"Toastify\"\n      /* CSS_NAMESPACE */\n      + \"__toast-container--rtl\"] = rtl, _cx2), parseClassName(className)),\n      style: toastList.length === 0 ? _extends({}, style, {\n        pointerEvents: 'none'\n      }) : _extends({}, style)\n    };\n    return createElement(ToastPositioner, Object.assign({}, swag, {\n      key: \"container-\" + position\n    }), toastList.map(function (_ref) {\n      var content = _ref.content,\n          toastProps = _ref.props;\n      return createElement(Toast, Object.assign({}, toastProps, {\n        \"in\": isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  }));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: /*#__PURE__*/PropTypes.oneOf( /*#__PURE__*/objectValues(POSITION)),\n    // @ts-ignore\n    autoClose: /*#__PURE__*/PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n    // @ts-ignore\n    closeButton: /*#__PURE__*/PropTypes.oneOfType([PropTypes.node, PropTypes.bool, PropTypes.func]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.any,\n    style: PropTypes.object,\n    toastClassName: /*#__PURE__*/PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    bodyClassName: /*#__PURE__*/PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    progressClassName: /*#__PURE__*/PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: /*#__PURE__*/PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Check whether any container is currently mounted in the DOM\r\n */\n\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n/**\r\n * Get the container by id. Returns the last container declared when no id is given.\r\n */\n\n\nfunction getContainer(containerId) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = getContainer(containerId);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(0\n    /* Show */\n    , content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return _extends({}, options, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\n\nvar toast = function toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n};\n\ntoast.success = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n};\n\ntoast.info = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.INFO, options));\n};\n\ntoast.error = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n};\n\ntoast.warning = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n};\n\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DARK, options));\n};\n/**\r\n * Maybe I should remove warning in favor of warn, I don't know\r\n */\n\n\ntoast.warn = toast.warning;\n/**\r\n * Remove toast programmaticaly\r\n */\n\ntoast.dismiss = function (id) {\n  return isAnyContainerMounted() && eventManager.emit(1\n  /* Clear */\n  , id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return isAnyContainerMounted() && eventManager.emit(5\n  /* ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n\n    if (toast) {\n      var oldOptions = toast.props,\n          oldContent = toast.content;\n\n      var nextOptions = _extends({}, oldOptions, options, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = typeof nextOptions.render !== 'undefined' ? nextOptions.render : oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */\n    , callback);\n  }\n\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */\n    , callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n */\n\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */\n, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */\n, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */\n    ).off(1\n    /* Clear */\n    ).off(5\n    /* ClearWaitingQueue */\n    );\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\nexport { Bounce, Flip, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"mappings":"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","names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","objectValues","obj","Object","keys","map","key","hasToastId","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canUseDom","window","document","createElement","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","DARK","collapseToast","node","done","duration","height","scrollHeight","style","requestAnimationFrame","minHeight","transition","padding","margin","setTimeout","cssTransition","enter","exit","_ref$duration","appendPosition","_ref$appendPosition","collapse","_ref$collapse","collapseDuration","enterDuration","exitDuration","Array","isArray","length","ToastTransition","children","position","preventExitTransition","props","enterClassName","exitClassName","onEnter","nodeRef","current","classList","add","animationFillMode","animationDuration","onEntered","remove","removeProperty","onExited","removeEventListener","onExit","addEventListener","React","Transition","timeout","unmountOnExit","eventManager","list","Map","emitQueue","on","event","callback","has","set","get","push","off","cb","filter","cancelEmit","timers","forEach","timer","clearTimeout","emit","args","_this","useKeeper","arg","refresh","ref","useRef","useEffect","reducer","state","action","type","id","staleId","useToastContainer","useReducer","x","forceUpdate","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","buildToast","removeToast","clearWaitingQueue","indexOf","limit","enableMultiContainer","queueLen","freeSlot","dequeueToast","toDequeue","i","shift","toastContent","toastProps","appendToast","isNotValid","updateId","delay","options","closeToast","isNotAnUpdate","closeButton","rtl","className","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removeFromCollection","onOpen","onClose","cloneElement","getToastToRender","toastToRender","toastList","newestOnTop","reverse","p","getX","e","targetTouches","clientX","getY","clientY","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","deltaX","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","bindDragEvents","unbindDragEvents","bindFocusEvents","unbindFocusEvents","onDragStart","getBoundingClientRect","nativeEvent","offsetWidth","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","onDragMove","onDragEnd","preventDefault","transform","opacity","Math","abs","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","ariaLabel","_ref$ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","isIn","animationPlayState","defaultClassArr","classNames","defaultClassName","cx","animationEvent","defaultProps","Toast","cssClasses","renderCloseButton","appear","undefined","Bounce","Slide","Zoom","Flip","ToastPositioner","rest","child","ToastContainer","swag","pointerEvents","process","env","NODE_ENV","propTypes","PropTypes","oneOf","oneOfType","bool","number","func","any","object","string","containers","latestInstance","containerDomNode","containerConfig","lazy","isAnyContainerMounted","size","getContainer","container","generateToastId","random","toString","Date","now","substr","getToastId","dispatchToast","body","appendChild","render","mergeOptions","success","info","error","warning","dark","warn","dismiss","params","isActive","update","oldOptions","oldContent","nextOptions","onChange","configure","config","containerInstance","item","removeChild"],"sources":["../src/utils/propValidator.ts","../src/utils/constant.ts","../src/utils/collapseToast.ts","../src/utils/cssTransition.tsx","../src/core/eventManager.ts","../src/hooks/useKeeper.ts","../src/hooks/toastContainerReducer.ts","../src/hooks/useToastContainer.ts","../src/hooks/useToast.ts","../src/components/CloseButton.tsx","../src/components/ProgressBar.tsx","../src/components/Toast.tsx","../src/components/Transitions.tsx","../src/components/ToastPositioner.tsx","../src/components/ToastContainer.tsx","../src/core/toast.tsx"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function objectValues<T>(obj: Record<string, T>) {\n  return Object.keys(obj).map(key => obj[key]);\n}\n\nexport function hasToastId(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT' | 'DARK';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default',\n  DARK: 'dark'\n};\n\nexport const enum DEFAULT {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify'\n}\n","import { DEFAULT } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = DEFAULT.COLLAPSE_DURATION\n) {\n  const height = node.scrollHeight;\n  const style = node.style;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = height + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(() => done(), duration as number);\n    });\n  });\n}\n","import * as React from 'react';\nimport { Transition } from 'react-transition-group';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { DEFAULT } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Define the duration of the transition in ms\n   * You can also pass an array `[enterDuration, exitDuration]`\n   * `Default: 750`\n   */\n  duration?: number | [number, number];\n\n  /**\n   * Append current toast position to the classname.\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nexport function cssTransition({\n  enter,\n  exit,\n  duration = 750,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = DEFAULT.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  let enterDuration: number, exitDuration: number;\n\n  if (Array.isArray(duration) && duration.length === 2) {\n    [enterDuration, exitDuration] = duration;\n  } else {\n    enterDuration = exitDuration = duration as number;\n  }\n\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    ...props\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n\n    const onEnter = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(enterClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${enterDuration}ms`;\n      }\n    };\n\n    const onEntered = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.remove(enterClassName);\n        node.style.removeProperty('animationFillMode');\n        node.style.removeProperty('animationDuration');\n      }\n    };\n\n    const onExited = () => {\n      const node = props.nodeRef.current;\n\n      if (node) {\n        node.removeEventListener('animationend', onExited);\n        collapse ? collapseToast(node, done, collapseDuration) : done();\n      }\n    };\n\n    const onExit = () => {\n      const node = props.nodeRef.current;\n      if (node) {\n        node.classList.add(exitClassName);\n        node.style.animationFillMode = 'forwards';\n        node.style.animationDuration = `${exitDuration}ms`;\n        node.addEventListener('animationend', onExited);\n      }\n    };\n\n    return (\n      <Transition\n        {...props}\n        timeout={\n          preventExitTransition\n            ? collapse\n              ? collapseDuration\n              : DEFAULT.DEBOUNCE_DURATION\n            : {\n                enter: enterDuration,\n                exit: collapse\n                  ? exitDuration + collapseDuration\n                  : exitDuration + DEFAULT.DEBOUNCE_DURATION\n              }\n        }\n        onEnter={onEnter}\n        onEntered={onEntered}\n        onExit={preventExitTransition ? onExited : onExit}\n        unmountOnExit\n      >\n        {children}\n      </Transition>\n    );\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof window.setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach((timer: TimeoutId) => clearTimeout(timer));\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { hasToastId } from '../utils';\n\nexport type State = Array<Id>;\nexport type Action =\n  | { type: 'ADD'; toastId: Id; staleId?: Id }\n  | { type: 'REMOVE'; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case 'REMOVE':\n      return hasToastId(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  hasToastId,\n  getAutoCloseDelay\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit, enableMultiContainer } = instance.props;\n    if (\n      limit &&\n      (!containerId ||\n        (instance.containerId === containerId && enableMultiContainer))\n    ) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    const queueLen = queue.length;\n    toastCount = hasToastId(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = hasToastId(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    }\n    dispatch({ type: 'REMOVE', toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n\n    // ensure that exit transition has been completed, hence the timeout\n    setTimeout(() => {\n      appendToast(toastContent, toastProps, staleId);\n    }, 500);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (instance.isToastActive(toastId) && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId } = options;\n    const { props, isToastActive } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = !isToastActive(toastId);\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: 'ADD',\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    forceUpdate();\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  deltaX: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    deltaX: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    const toast = toastRef.current!;\n    drag.canCloseOnClick = true;\n    drag.canDrag = true;\n    drag.boundingRect = toast.getBoundingClientRect();\n    toast.style.transition = '';\n    drag.start = drag.x = getX(e.nativeEvent as DragEvent);\n    drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    e.preventDefault();\n\n    const toast = toastRef.current!;\n\n    if (drag.canDrag) {\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.deltaX = drag.x - drag.start;\n      drag.y = getY(e as DragEvent);\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translateX(${drag.deltaX}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.deltaX / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.deltaX) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = 'translateX(0)';\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { DEFAULT } from '../utils';\nimport { TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n}\n\nexport function CloseButton({\n  closeToast,\n  type,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${DEFAULT.CSS_NAMESPACE}__close-button ${DEFAULT.CSS_NAMESPACE}__close-button--${type}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, DEFAULT, isFn } from './../utils';\nimport { TypeOptions, ToastClassName } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassArr = [\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${DEFAULT.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${DEFAULT.CSS_NAMESPACE}__progress-bar--animated`,\n    `${DEFAULT.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  ];\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName: cx(...defaultClassArr)\n      })\n    : cx(...[...defaultClassArr, className]);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  return <div className={classNames} style={style} {...animationEvent} />;\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { DEFAULT, isFn } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast\n  } = props;\n  const defaultClassArr = [\n    `${DEFAULT.CSS_NAMESPACE}__toast`,\n    `${DEFAULT.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${DEFAULT.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  ];\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName: cx(...defaultClassArr)\n      })\n    : cx(...[...defaultClassArr, className]);\n  const controlledProgress = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type };\n    if (isFn(closeButton)) return closeButton(props);\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      in={props.in!}\n      appear\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses || undefined}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(props.in && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${DEFAULT.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {children}\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || controlledProgress) && (\n          <ProgressBar\n            {...(updateId && !controlledProgress\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={props.in}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={controlledProgress}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { DEFAULT, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__slide-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__slide-exit`,\n  duration: [450, 750],\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${DEFAULT.CSS_NAMESPACE}__flip-enter`,\n  exit: `${DEFAULT.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport { ToastProps } from '../types';\ntype ToastPositionerProps = Pick<ToastProps, 'style' | 'in'> & {\n  className?: string;\n};\n\nexport const ToastPositioner: React.FC<ToastPositionerProps> = ({\n  children,\n  className,\n  style,\n  ...rest\n}) => {\n  // Monkey patch react-transition-group\n  // As exit transition is broken with strict mode\n  delete rest.in;\n\n  return (\n    <div className={className} style={style}>\n      {React.Children.map(children, child =>\n        React.cloneElement(child as React.ReactElement<any>, rest)\n      )}\n    </div>\n  );\n};\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport {\n  POSITION,\n  DEFAULT,\n  parseClassName,\n  objectValues,\n  isFn\n} from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\nimport { ToastPositioner } from './ToastPositioner';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  return (\n    <div\n      ref={containerRef}\n      className={DEFAULT.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const swag = {\n          className: isFn(className)\n            ? className({\n                position,\n                rtl,\n                defaultClassName: cx(\n                  `${DEFAULT.CSS_NAMESPACE}__toast-container`,\n                  `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\n                  { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n                )\n              })\n            : cx(\n                `${DEFAULT.CSS_NAMESPACE}__toast-container`,\n                `${DEFAULT.CSS_NAMESPACE}__toast-container--${position}`,\n                { [`${DEFAULT.CSS_NAMESPACE}__toast-container--rtl`]: rtl },\n                parseClassName(className)\n              ),\n          style:\n            toastList.length === 0\n              ? { ...style, pointerEvents: 'none' }\n              : { ...style }\n        } as any;\n        return (\n          <ToastPositioner {...swag} key={`container-${position}`}>\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  in={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </ToastPositioner>\n        );\n      })}\n    </div>\n  );\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  // @ts-ignore\n  ToastContainer.propTypes = {\n    // @ts-ignore\n    position: PropTypes.oneOf(objectValues(POSITION)),\n\n    // @ts-ignore\n    autoClose: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n\n    // @ts-ignore\n    closeButton: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.bool,\n      PropTypes.func\n    ]),\n    hideProgressBar: PropTypes.bool,\n    pauseOnHover: PropTypes.bool,\n    closeOnClick: PropTypes.bool,\n    newestOnTop: PropTypes.bool,\n    className: PropTypes.any, //oneOfType([PropTypes.func, PropTypes.string]),\n    style: PropTypes.object,\n    toastClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    bodyClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    progressClassName: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    progressStyle: PropTypes.object,\n    transition: PropTypes.func,\n    rtl: PropTypes.bool,\n    draggable: PropTypes.bool,\n    draggablePercent: PropTypes.number,\n    pauseOnFocusLoss: PropTypes.bool,\n    enableMultiContainer: PropTypes.bool,\n    containerId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    role: PropTypes.string,\n    onClick: PropTypes.func\n  };\n}\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80,\n  role: 'alert'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from 'hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the container by id. Returns the last container declared when no id is given.\n */\nfunction getContainer(containerId?: Id) {\n  if (!isAnyContainerMounted()) return null;\n  return containers.get(!containerId ? latestInstance : containerId);\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = getContainer(containerId);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return (Math.random().toString(36) + Date.now().toString(36)).substr(2, 10);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.success = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.SUCCESS, options));\n\ntoast.info = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.INFO, options));\n\ntoast.error = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.ERROR, options));\n\ntoast.warning = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.WARNING, options));\n\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DARK, options));\n\n/**\n * Maybe I should remove warning in favor of warn, I don't know\n */\ntoast.warn = toast.warning;\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) =>\n  isAnyContainerMounted() && eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  isAnyContainerMounted() && eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content =\n        typeof nextOptions.render !== 'undefined'\n          ? nextOptions.render\n          : oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}